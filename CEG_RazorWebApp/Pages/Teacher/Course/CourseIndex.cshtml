@page "/Teacher/Course/Index"
@model CEG_RazorWebApp.Pages.Teacher.Course.CourseIndexModel
@{
    ViewData["Title"] = "Teacher All Courses Page";
    string? search = string.Empty;
    var createCourse = Model.CreateCourse;
    var courses = Model.Courses;
    Layout = Model.LayoutUrl;
}
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <title>@ViewData["Title"]</title>
    </head>
    <body>
        <div class="main-content">
            <div class="main">
                <div class="container-fluid">
                    <div class="row">
                        <div class="offset-sm-6 col-sm-6  d-flex justify-content-sm-end p-md-0 mt-2 mt-sm-0 ">
                            <ol class="breadcrumb">
                                <li class="breadcrumd-item">
                                    <a href="#">Manage</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Teacher/Course/Index">Course</a>
                                </li>
                            </ol>
                        </div>
                    </div>
                    <section>
                        <div class="card">
                            <div class="card-body">
                                <!-- Nav tabs -->
                                <ul class="nav nav-tabs">
                                    <!-- dung vong for o day -->
                                    <li class="nav-item">
                                        <a class="nav-link active" data-toggle="tab" href="#home1">
                                            <i class='bx bx-home-alt-2'></i>
                                            <span>All Courses</span>
                                        </a>
                                    </li>
                                </ul>

                                @if (TempData["Success"] != null)
                                {
                                    <div class="alert alert-success alert-dismissible fade show" id="notif">
                                        <i class='bx bx-message-alt-x p-1'></i>
                                        <strong class="mr-1">@TempData["Success"]</strong>
                                        <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                            <span><i class='bx bx-x'></i></span>
                                        </button>
                                    </div>
                                TempData["Success"] = null;
                                }
                                else if (TempData["Error"] != null)
                                {
                                    <div class="alert alert-danger alert-dismissible fade show" id="notif">
                                        <i class='bx bx-message-alt-x p-1'></i>
                                        <strong class="mr-1">@TempData["Error"]</strong>
                                        <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                            <span><i class='bx bx-x'></i></span>
                                        </button>
                                    </div>
                                TempData["Error"] = null;
                                }

                                <!-- Tab panes -->
                                <div class="tab-content">
                                    <!-- home1 -->
                                    <div class="tab-pane active" id="home1" role="tabpanel">
                                        <div class="row search">
                                            <div class="col-sm-12 d-flex">
                                                <div class="col-sm-6 d-flex address-home">
                                                </div>
                                                <div class="col-sm-6 d-flex justify-content-end">
                                                    <form method="get" asp-route-search="@search">
                                                        <div>
                                                            <label>
                                                                <input asp-for="@search" class="form-control" type="text" placeholder="Search..." value="@search">
                                                                <i class='bx bx-search-alt'></i>
                                                            </label>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row card-content">
                                            <div class="col-xl-3 col-lg-6 col-sm-6 my-3 item">
                                                <div class="card1 card-child">
                                                    <div class="card-body add-club">
                                                        <button class="border-0" data-toggle="modal" data-target="#addCourse">
                                                            <span>Add Course</span>
                                                            <i class='bx bx-add-to-queue'></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            @if(courses != null && courses.Count > 0)
                                            {
                                            <!-- dung vong for o day -->
                                                @foreach (var data in courses)
                                                {
                                                    <div class="col-xl-3 col-lg-6 col-sm-6 my-3">
                                                        <div class="card1 card-child">
                                                            <div class="club-name">
                                                                Course ID: @data.CourseId
                                                                <div class="status">
                                                                    @{
                                                                        switch (data.Status)
                                                                        {
                                                                            case "Available":
                                                                                {
                                                                                    <span class="stt1" style="float: left;">Status:<h6>@data.Status</h6></span>
                                                                                    break;
                                                                                }
                                                                            case "Draft":
                                                                                {
                                                                                    <span class="stt3" style="float: left;">Status:<h6>@data.Status</h6></span>
                                                                                    break;
                                                                                }
                                                                            case "Postponed":
                                                                            case "Cancelled":
                                                                                {
                                                                                    <span class="stt2" style="float: left;">Status:<h6>@data.Status</h6></span>
                                                                                    break;
                                                                                }
                                                                        }
                                                                    }
                                                                </div>
                                                            </div>
                                                            <div class="card-body">
                                                                <div class="club-title">
                                                                    <ul>
                                                                        <li>
                                                                            <h6>Course Name:</h6>
                                                                            <span>@data.CourseName</span>
                                                                        </li>
                                                                        <li>
                                                                            <h6>Course Type:</h6>
                                                                            <span>@data.CourseType</span>
                                                                        </li>
                                                                        <li>
                                                                            <h6>Total Hours:</h6>
                                                                            <span>@data.TotalHours</span>
                                                                        </li>
                                                                        <li>
                                                                            <h6>Required Age:</h6>
                                                                            <span>@data.RequiredAge</span>
                                                                        </li>
                                                                        <li>
                                                                            <h6>Difficulty:</h6>
                                                                            <span>@data.Difficulty</span>
                                                                        </li>
                                                                        <li>
                                                                            <h6>Description:</h6>
                                                                            <span class="truncate">@data.Description</span>
                                                                        </li>
                                                                        <li>
                                                                            <h6>Sessions Amount:</h6>
                                                                            <span>@data.SessionsAmount Session(s)</span>
                                                                        </li>
                                                                        <li>
                                                                            <h6>Classes Amount:</h6>
                                                                            <span>@data.ClassesAmount Class(es)</span>
                                                                        </li>
                                                                    </ul>
                                                                </div>
                                                            </div>
                                                            <div class="form-group mx-auto">
                                                                <a class="btn btn-primary clickable-row" asp-page-handler="Info" asp-route-courseId="@data.CourseId">See Detail</a>
                                                                @* @{
                                                                    if (data.Status.Equals("OnHold") || data.Status.Equals("Postponed") || data.Status.Equals("CheckingIn") || data.Status.Equals("Ongoing"))
                                                                    {
                                                                        <button class="btn btn-danger" data-toggle="modal" data-target="#deleteContest_@data.ContestId" type="submit">Cancel</button>
                                                                    }
                                                                } *@
                                                            </div>
                                                        </div>
                                                    </div>
                                                    @* <div id="deleteContest_@data.ContestId" class="modal fade" role="dialog">
                                                    <div class="modal-dialog modal-dialog-centered" role="content">
                                                    <div class="modal-content">
                                                    <div class="card-body">
                                                    <div class="del-title">
                                                    <i class='bx bx-error-circle'></i>
                                                    <h2>Are you sure you want to cancel this Contest ?</h2>
                                                    </div>
                                                    <div class="del-submit d-flex justify-content-center">
                                                    <form asp-action="ManagerCancelContest" asp-controller="Manager" method="post" asp-route-id="@data.ContestId">
                                                    <button type="submit" name="action" value="deleteContest" class="btn btn-success">
                                                    Yes
                                                    </button>
                                                    </form>
                                                    <button class="btn btn-danger" type="button" data-dismiss="modal">No</button>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </div>
                                                    </div> *@
                                            }
                                        }
                                        <!-- end tapnet -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
        <div id="addCourse" class="modal fade" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content modal-addRoom">
                    <div class="modal-header">
                        <h4 class="modal-title">Add new Course</h4>
                    </div>
                    <div class="modal-body">
                        <form method="post" id="form">
                            <div class="row p-4">
                                <div class="col-12">
                                    <div class="row form-group">
                                        <label asp-for="@createCourse.CourseName" class="col-md-3 col-form-label text-md-right"></label>
                                        <input asp-for="@createCourse.CourseName" value="@createCourse.CourseName" type="text" placeholder="Course Name..." required class="form-control col-md-7">
                                        <span asp-validation-for="@createCourse.CourseName" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.CourseType" class="col-md-3 col-form-label text-md-right"></label>
                                        <input asp-for="@createCourse.CourseType" value="@createCourse.CourseType" type="text" placeholder="Course Type" required class="form-control col-md-7">
                                        <span asp-validation-for="@createCourse.CourseType" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.Category" class="col-md-3 col-form-label text-md-right"></label>
                                        <select class="form-control col-md-7 custom-select" asp-for="@createCourse.Category" asp-items="@createCourse.DefaultCourseCategorySelectList" required></select>
                                        <span asp-validation-for="@createCourse.Category" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.Description" class="col-md-3 col-form-label text-md-right"></label>
                                        <textarea asp-for="@createCourse.Description" value="@createCourse.Description" required class="form-control col-md-7"></textarea>
                                        <span asp-validation-for="@createCourse.Description" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.Difficulty" class="col-md-3 col-form-label mt-3 text-md-right"></label>
                                        <select class="form-control col-md-7 custom-select" asp-for="@createCourse.Difficulty" asp-items="@createCourse.DefaultCourseDifficultySelectList" required></select>
                                        <span asp-validation-for="@createCourse.Difficulty" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.RequiredAge" class="col-md-3 col-form-label text-md-right"></label>
                                        <input asp-for="@createCourse.RequiredAge" value="@createCourse.RequiredAge" type="number" min="11" max="14" placeholder="Full Name" required class="form-control col-md-7">
                                        <span asp-validation-for="@createCourse.RequiredAge" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.TotalHours" class="col-md-3 col-form-label text-md-right"></label>
                                        <input asp-for="@createCourse.TotalHours" value="@createCourse.TotalHours" type="number" min="1" placeholder="Full Name" required class="form-control col-md-7">
                                        <span asp-validation-for="@createCourse.TotalHours" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                    </div>
                                </div>
                                <div class="modal-footer justify-content-center" style="margin-left:400px;">
                                    <button class="btn btn-success" type="submit" name="action" value="createUser">Create</button>
                                    <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    <script>
        var token = '@HttpContext.Session.GetString(CEG_RazorWebApp.Libraries.Constants.ACC_TOKEN)';
        var apiUrl = 'https://localhost:7143/api/';
        var classList = [];
        $(document).ready(function () {
            callApiGetClassList();
            $('#search').on('keyup', function (event) {
                // Get the search term
                var searchTerm = $(this).val().toLowerCase();

                // Filter the classes based on the search term
                var filteredclassList = classList.filter(function (classObject) {
                    return classObject.className.toLowerCase().includes(searchTerm);
                });

                // Display the filtered accountList
                setClassDisplay(filteredclassList);
            });
            // Call API to get the list of teacher names
            $.ajax({
                url: apiUrl + 'Teacher/All/Fullname', // API endpoint
                type: 'GET',
                success: function (response) {
                    // Log the entire response to the console for debugging
                    console.log("Returned object:", response);

                    // Check if the status is true
                    if (response.status) {
                        var select = $('#createClass_TeacherName'); // Reference to the <select> element
                        select.empty(); // Clear any existing options

                        // Append a default option
                        // select.append('<option value="">--Select a Teacher--</option>');

                        // Loop through the data array and append each name as an option
                        $.each(response.data, function (index, teacherName) {
                            select.append('<option value="' + teacherName + '">' + teacherName + '</option>');
                        });
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call:", error);
                }
            });
            // Call API to get the list of course names
            $.ajax({
                url: apiUrl + 'Course/All/Name', // API endpoint
                type: 'GET',
                success: function (response) {
                    // Log the entire response to the console for debugging
                    console.log("Returned object:", response);

                    // Check if the status is true
                    if (response.status) {
                        var select = $('#createClass_CourseName'); // Reference to the <select> element
                        select.empty(); // Clear any existing options

                        // Append a default option
                        // select.append('<option value="">--Select a Teacher--</option>');

                        // Loop through the data array and append each name as an option
                        $.each(response.data, function (index, courseName) {
                            select.append('<option value="' + courseName + '">' + courseName + '</option>');
                        });
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call:", error);
                    //showAlert('success', 'Data fetched successfully.');
                }
            });
            // Function to display alerts
            function showAlert(type, message) {
                var alertHtml = '';

                if (type === 'success') {
                    alertHtml = `
                        <div class="alert alert-success alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>`;
                } else if (type === 'error') {
                    alertHtml = `
                        <div class="alert alert-danger alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>`;
                }

                // Inject the alert HTML into the alert container
                $('#alertContainer').html(alertHtml);
            }
        });
        function callApiGetClassList(){
            $.ajax({
                url: apiUrl + 'Class/Teacher/All', // API endpoint
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token// Include the JWT token
                },
                success: function (response) {
                    // Log the entire response to the console for debugging
                    console.log("Returned object:", response);

                    // Check if the status is true
                    if (response.status) {
                        classList = response.data;
                        setClassDisplay(classList);
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call:", error);
                    //showAlert('success', 'Data fetched successfully.');
                }
            });
        }
        function setClassDisplay(data){
            var classList = $('#classList'); // Reference to the <classList> element
            // classList.empty(); // Clear any existing options
            classList.empty();
            var cardCreateClassHtml = `
                <div class="col-xl-3 col-lg-6 col-sm-6 my-3 item">
                    <div class="card1 card-child">
                        <div class="card-body add-club">
                            <button class="border-0" data-toggle="modal" data-target="#addClass">
                                <span>Add Class</span>
                                <i class='bx bx-add-to-queue'></i>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            classList.append(cardCreateClassHtml);
            // Loop through the data array and append each class div
            $.each(data, function (index, classObj) {
                var formattedStartDate = formatDate(classObj.startDate);
                var formattedEndDate = formatDate(classObj.endDate);
                // Construct card HTML
                var cardHtml = `
                    <div class="col-xl-3 col-lg-6 col-sm-6 my-3">
                        <div class="card1 card-child">
                            <div class="club-name">Class ID: ${classObj.classId}</div>
                            <div class="card-body">
                                <div class="club-title">
                                    <ul>
                                        <li><h6>Class name:</h6><span>${classObj.className}</span></li>
                                        <li><h6>Course:</h6><span>${classObj.course.courseName}</span></li>
                                        <li><h6>Teacher:</h6><span>${classObj.teacher.account.fullname}</span></li>
                                        <li><h6>Start date:</h6><span>${formattedStartDate}</span></li>
                                        <li><h6>End date:</h6><span>${formattedEndDate}</span></li>
                                        <li><h6>Minimum amount of students:</h6><span>${classObj.minimumStudents}</span></li>
                                        <li><h6>Maximum amount of students:</h6><span>${classObj.maximumStudents}</span></li>
                                        <li><h6>Current amount of students:</h6><span>${classObj.studentProgress.length}</span></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="form-group mx-auto">
                                <form method="get" asp-route-id="${classObj.ClassName}">
                                    <button class="btn btn-primary clickable-row" type="submit">See Detail</button>
                                </form>
                            </div>
                        </div>
                    </div>
                `;
                // Append the constructed HTML to the class list container
                classList.append(cardHtml);
            });
        }
        function formatDate(date) {
            let d = new Date(date);

            // Get day, month, year
            let day = String(d.getDate()).padStart(2, '0');
            let month = String(d.getMonth() + 1).padStart(2, '0'); // Months are zero-based
            let year = d.getFullYear();

            // Get hours, minutes
            let hours = String(d.getHours()).padStart(2, '0');
            let minutes = String(d.getMinutes()).padStart(2, '0');

            // Optionally, get seconds
            let seconds = String(d.getSeconds()).padStart(2, '0');

            // Return the formatted date and time as `dd/mm/yyyy hh:mm`
            return `${day}/${month}/${year} ${hours}:${minutes}`;

            // If you want to include seconds as well, use this return:
            // return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
        }
        $("#submitClass").click(function (event) {
            event.preventDefault(); // Prevent the form from submitting

            // Gather form data
            var classData = {
                ClassName: $("#createClass_ClassName").val(),
                MinStudents: $("#createClass_MinStudents").val(),
                MaxStudents: $("#createClass_MaxStudents").val(),
                TeacherName: $("#createClass_TeacherName").val(),
                CourseName: $("#createClass_CourseName").val(),
                StartDate: $("#createClass_StartDate").val(),
                EndDate: $("#createClass_EndDate").val(),
            };

            // Make the AJAX POST request
            $.ajax({
                url: apiUrl + 'Class/Create',
                headers: {
                    'Authorization': 'Bearer ' + token// Include the JWT token
                },
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(classData),
                success: function (response) {
                    // Log the entire response to the console for debugging
                    // Check if the status is true
                    if (response.status) {
                        alert('Class created successfully!');
                        $('#createClassForm').trigger("reset");
                        callApiGetClassList();
                    } else {
                        console.error("API returned false status. Message:", response.ErrorMessage);
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call", error);
                    //showAlert('success', 'Data fetched successfully.');
                }
            });
        });
    </script>
    </body>
</html>
