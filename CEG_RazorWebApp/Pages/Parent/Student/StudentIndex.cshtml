@page "/Parent/Student/Index"
@model CEG_RazorWebApp.Pages.Parent.Children.StudentIndexModel
@{
    ViewData["Title"] = "Parent All Students Page";
    Layout = Model.LayoutUrl;
}
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>@ViewData["Title"]</title>
    </head>
    <body>
        <div class="main-content">
            <div class="main">
                <div class="container-fluid">
                    <div class="row">
                        <div class="offset-sm-6 col-sm-6  d-flex justify-content-sm-end p-md-0 mt-2 mt-sm-0 ">
                            <ol class="breadcrumb-item">
                                <li class="breadcrumd-item">
                                    <a href="#">Manage</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Parent/Student/Index">Account</a>
                                </li>
                            </ol>
                        </div>
                    </div>
                    <section>
                        <div class="card">
                            <div class="card-body">
                                <!-- Nav tabs -->
                                <ul class="nav nav-tabs">
                                    <!-- dung vong for o day -->
                                    <li class="nav-item">
                                        <a class="nav-link active" data-toggle="tab" href="#home1">
                                            <i class='bx bx-home-alt-2'></i>
                                            <span>All your Student Accounts</span>
                                        </a>
                                    </li>
                                </ul>
                            <div id="alertContainer"></div>

                                <!-- Tab panes -->
                                <div class="tab-content">
                                    <!-- home1 -->
                                    <div class="tab-pane active" id="home1" role="tabpanel">
                                        <div class="row search">
                                            <div class="col-sm-12 d-flex">
                                                <div class="col-sm-6 d-flex justify-content-end">
                                                    <div>
                                                        <label>
                                                            <input id="search" class="form-control" type="text" placeholder="Search Username...">
                                                            <i class='bx bx-search-alt'></i>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="history-table_wrapper" class="dataTables_wrapper no-footer">
                                            <table id="history-table"
                                                   class="table table-striped table-bordered dataTable no-footer"
                                                   aria-describedby="history-table_info">
                                                <thead>
                                                    <tr>
                                                        <th class="sorting sorting_asc" tabindex="0"
                                                            aria-controls="history-table" rowspan="1"
                                                            colspan="1" aria-sort="ascending"
                                                            aria-label="Student User Name: activate to sort column ascending">
                                                            Username
                                                        </th>
                                                        <th class="sorting sorting_asc" tabindex="0"
                                                            aria-controls="history-table" rowspan="1"
                                                            colspan="1" aria-sort="ascending"
                                                            aria-label="Student Full Name: activate to sort column ascending">
                                                            Full name
                                                        </th>
                                                        <th class="sorting sorting_asc" tabindex="0"
                                                            aria-controls="history-table" rowspan="1"
                                                            colspan="1" aria-sort="ascending"
                                                            aria-label="Student High Score: activate to sort column ascending">
                                                            High Score
                                                        </th>
                                                        <th class="sorting sorting_asc" tabindex="0"
                                                            aria-controls="history-table" rowspan="1"
                                                            colspan="1" aria-sort="ascending"
                                                            aria-label="Student Playtime: activate to sort column ascending">
                                                            Playtime
                                                        </th>
                                                        <th class="sorting sorting_asc" tabindex="0"
                                                            aria-controls="history-table" rowspan="1"
                                                            colspan="1" aria-sort="ascending"
                                                            aria-label="Student Current Level: activate to sort column ascending">
                                                            Current Level
                                                        </th>
                                                        <th class="sorting sorting_asc" tabindex="0"
                                                            aria-controls="history-table" rowspan="1"
                                                            colspan="1" aria-sort="ascending"
                                                            aria-label="Student Points: activate to sort column ascending">
                                                            Points
                                                        </th>
                                                        <th class="sorting sorting_asc" tabindex="0"
                                                            aria-controls="history-table" rowspan="1"
                                                            colspan="1" aria-sort="ascending"
                                                            aria-label="Student Birth Date: activate to sort column ascending">
                                                            Birth Date
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <!-- end tapnet -->
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>

        <script>
            var token = '@HttpContext.Session.GetString(CEG_RazorWebApp.Libraries.Constants.ACC_TOKEN)';
            var id = '@HttpContext.Session.GetString(CEG_RazorWebApp.Libraries.Constants.USR_ID)';
            var apiUrl = 'https://localhost:7143/api/';
            var studentList = [];
            $(document).ready(function () {
                callApiGetStudentList();
                $('#search').on('keyup', function (event) {
                    // Get the search term
                    var searchTerm = $(this).val().toLowerCase();

                    // Filter the classes based on the search term
                    var filteredstudentList = studentList.filter(function (student) {
                        return student.account.fullname.toLowerCase().includes(searchTerm);
                    });

                    // Display the filtered studentList
                    setStudentDisplay(filteredstudentList);
                });
            });
            // Function to display alerts
            function showAlert(type, message) {
                var alertHtml = '';

                if (type === 'success') {
                    alertHtml = `
                        <div class="alert alert-success alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>
                    `;
                } else if (type === 'error') {
                    alertHtml = `
                        <div class="alert alert-danger alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>
                    `;
                }

                // Inject the alert HTML into the alert container
                $('#alertContainer').html(alertHtml);
            }
            function callApiGetStudentList() {
                $.ajax({
                    url: apiUrl + `Student/ByParent/${id}`, // API endpoint
                    type: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + token // Include the JWT token
                    },
                    success: function (response) {
                        // Log the entire response to the console for debugging
                        // console.log("Returned object:", response);

                        // Check if the status is true
                        if (response.status) {
                            studentList = response.data;

                            setStudentDisplay(studentList);
                            showAlert('success', 'Student list get successfully!');
                        } else {
                            showAlert('error', "Error in api call:" + error);
                            console.error("API returned false status.");
                        }
                    },
                    error: function (error) {
                        showAlert('error', "Error in api call:" + error);
                        console.error("Error in api call:", error);
                        //showAlert('success', 'Data fetched successfully.');
                    }
                });
            }
            function setStudentDisplay(data) {
                var tableBody = $('#history-table tbody'); // Reference to the <id="history-table"> element
                tableBody.empty(); // Clear any existing options
                // Loop through the data array and append each class div
                $.each(data, function (index, student) {
                    //var url = `href="/Parent/Student/${student.account.accountId}/Info"`
                    // Construct card HTML
                    var rowHtml = `
                        <tr class="${index % 2 === 0 ? 'even' : 'odd'}">
                            <td class="sorting_1">
                                <input type="hidden" name="listRequest[${index}].UserName" value="${student.account.username}" class="form-control" />
                                ${student.account.username}
                            </td>
                            <td>
                                <input type="hidden" name="listRequest[${index}].FullName" value="${student.account.fullname}" class="form-control" />
                                ${student.account.fullname}
                            </td>
                            <td>
                                <input type="hidden" name="listRequest[${index}].Highscore" value="${student.highscore}" class="form-control" />
                                ${student.highscore}
                            </td>
                            <td>
                                <input type="hidden" name="listRequest[${index}].Playtime" value="${student.playtime}" class="form-control" />
                                ${student.playtime}
                            </td>
                            <td>
                                <input type="hidden" name="listRequest[${index}].CurLevel" value="${student.curLevel}" class="form-control" />
                                ${student.curLevel}
                            </td>
                            <td>
                                <input type="hidden" name="listRequest[${index}].Points" value="${student.points}" class="form-control" />
                                ${student.points}
                            </td>
                            <td>
                                <input type="hidden" name="listRequest[${index}].Birthdate" value="${student.birthdate}" class="form-control" />
                                ${formatDate(student.birthdate)}
                            </td>
                        <tr>
                    `;
                    // Append the constructed HTML to the class list container
                    tableBody.append(rowHtml);
                });
            }
            function formatDate(date) {
                let d = new Date(date);

                // Get day, month, year
                let day = String(d.getDate()).padStart(2, '0');
                let month = String(d.getMonth() + 1).padStart(2, '0'); // Months are zero-based
                let year = d.getFullYear();

                // Get hours, minutes
                let hours = String(d.getHours()).padStart(2, '0');
                let minutes = String(d.getMinutes()).padStart(2, '0');

                // Optionally, get seconds
                let seconds = String(d.getSeconds()).padStart(2, '0');

                // Return the formatted date and time as `dd/mm/yyyy hh:mm`
                return `${day}/${month}/${year} ${hours}:${minutes}`;

                // If you want to include seconds as well, use this return:
                // return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
            }
        </script>
    </body>
</html>