@page "/Admin/Course/Index"
@model CEG_RazorWebApp.Pages.Admin.Course.CourseIndexModel
@{
    ViewData["Title"] = "Admin All Courses Page";
    string? search = string.Empty;
    var createCourse = Model.CreateCourse;
    Layout = Model.LayoutUrl;
}
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <title>@ViewData["Title"]</title>
    </head>
    <body>
        <div class="main-content">
            <div class="main">
                <div class="container-fluid">
                    <div class="row">
                        <div class="offset-sm-6 col-sm-6  d-flex justify-content-sm-end p-md-0 mt-2 mt-sm-0 ">
                            <ol class="breadcrumb">
                                <li class="breadcrumd-item">
                                    <a href="#">Manage</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Course/Index">Course</a>
                                </li>
                            </ol>
                        </div>
                    </div>
                    <section>
                    <div id="alertContainer"></div>
                        <div class="card">
                            <div class="card-body">
                                <!-- Nav tabs -->
                                <ul class="nav nav-tabs">
                                    <!-- dung vong for o day -->
                                    <li class="nav-item">
                                        <a class="nav-link active" data-toggle="tab" href="/Admin/Course/Index">
                                            <i class='bx bx-home-alt-2'></i>
                                            <span>All Courses</span>
                                        </a>
                                    </li>
                                </ul>
                                <!-- Tab panes -->
                                <div class="tab-content">
                                    <!-- home1 -->
                                    <div class="tab-pane active" id="home1" role="tabpanel">
                                        <div class="row search">
                                            <div class="col-sm-12 d-flex">
                                                <div class="col-sm-6 d-flex address-home">
                                                </div>
                                                <div class="col-sm-6 d-flex justify-content-end">
                                                    <form method="get" asp-route-search="@search">
                                                        <div>
                                                            <label>
                                                                <input asp-for="@search" class="form-control" type="text" placeholder="Search..." value="@search">
                                                                <i class='bx bx-search-alt'></i>
                                                            </label>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row card-content" id="courseList">
                                            <!-- dung vong for o day -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
        </div>
        <div id="addCourse" class="modal fade" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content modal-addRoom">
                    <div class="modal-header">
                        <h4 class="modal-title">Add new Course</h4>
                    </div>
                    <form method="post" id="createCourseForm">
                        <div class="modal-body">
                            <div class="row p-4">
                                <div class="col-12">
                                    <div class="row form-group">
                                        <label asp-for="@createCourse.CourseName" class="col-md-3 col-form-label text-md-right"></label>
                                        <input asp-for="@createCourse.CourseName" value="@createCourse.CourseName" type="text" placeholder="Course Name..." required class="form-control col-md-7">
                                        <span asp-validation-for="@createCourse.CourseName" id="error_message"
                                                class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.CourseType" class="col-md-3 col-form-label text-md-right"></label>
                                        <input asp-for="@createCourse.CourseType" value="@createCourse.CourseType" type="text" placeholder="Course Type" required class="form-control col-md-7">
                                        <span asp-validation-for="@createCourse.CourseType" id="error_message"
                                                class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.Category" class="col-md-3 col-form-label text-md-right"></label>
                                        <select class="form-control col-md-7 custom-select" asp-for="@createCourse.Category" required></select>
                                        <span asp-validation-for="@createCourse.Category" id="error_message"
                                                class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.Description" class="col-md-3 col-form-label text-md-right"></label>
                                        <textarea asp-for="@createCourse.Description" value="@createCourse.Description" required class="form-control col-md-7"></textarea>
                                        <span asp-validation-for="@createCourse.Description" id="error_message"
                                                class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.Difficulty" class="col-md-3 col-form-label mt-3 text-md-right"></label>
                                        <select class="form-control col-md-7 custom-select" asp-for="@createCourse.Difficulty" required></select>
                                        <span asp-validation-for="@createCourse.Difficulty" id="error_message"
                                                class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.RequiredAge" class="col-md-3 col-form-label text-md-right"></label>
                                        <input asp-for="@createCourse.RequiredAge" value="@createCourse.RequiredAge" type="number" min="11" max="14" placeholder="Full Name" required class="form-control col-md-7">
                                        <span asp-validation-for="@createCourse.RequiredAge" id="error_message"
                                                class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <label asp-for="@createCourse.TotalHours" class="col-md-3 col-form-label text-md-right"></label>
                                        <input asp-for="@createCourse.TotalHours" value="@createCourse.TotalHours" type="number" min="1" placeholder="Full Name" required class="form-control col-md-7">
                                        <span asp-validation-for="@createCourse.TotalHours" id="error_message"
                                                class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer justify-content-center">
                            <button class="btn btn-success" type="submit" name="action">Create</button>
                            <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <script>
            var token = sessionStorage.getItem('token');
            var apiUrl = sessionStorage.getItem('apiUrl');
            var courseList = [];
            var homeworkQuestionList = [];
            $(document).ready(function () {
                callApiGetCourseList();
                $('#search').on('keyup', function (event) {
                    // Get the search term
                    var searchTerm = $(this).val().toLowerCase();

                    // Filter the classes based on the search term
                    var filteredcourseList = courseList.filter(function (courseObject) {
                        return courseObject.courseName.toLowerCase().includes(searchTerm);
                    });

                    // Display the filtered classList
                    setCourseDisplay(filteredcourseList);
                });
            });
            // Function to display alerts
            function showAlert(type, message) {
                var alertHtml = '';

                if (type === 'success') {
                    alertHtml = `
                        <div class="alert alert-success alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>
                    `;
                } else if (type === 'error') {
                    alertHtml = `
                        <div class="alert alert-danger alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>
                    `;
                }

                // Inject the alert HTML into the alert container
                $('#alertContainer').html(alertHtml);
            }
            function callApiGetCourseList() {
                $.ajax({
                    url: apiUrl + 'Course/All', // API endpoint
                    type: 'GET',
                    success: function (response) {
                        // Log the entire response to the console for debugging
                        console.log("Returned object:", response);

                        // Check if the status is true
                        if (response.status) {
                            courseList = response.data;
                            setCourseDisplay(courseList);
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (error) {
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                        //showAlert('success', 'Data fetched successfully.');
                    }
                });
            }
            function getDifficultyOptions() {
                var options = ['Beginner', 'Intermediate','Advanced']; // Example statuses
                var html = '';

                options.forEach(function (difficult) {
                    html += `<option value="${difficult}">${difficult}</option>`;
                });

                return html;
            }
            function getCategoryOptions() {
                var options = ['Middle School', 'High School']; // Example statuses
                var html = '';

                options.forEach(function (category) {
                    html += `<option value="${category}">${category}</option>`;
                });

                return html;
            }
            function setCourseDisplay(data) {
                $('#createCourse_Difficulty').empty();
                $('#createCourse_Difficulty').append(getDifficultyOptions());
                $('#createCourse_Category').empty();
                $('#createCourse_Category').append(getCategoryOptions());
                var courseList = $('#courseList');
                // Reference to the <classList> element
                courseList.empty(); // Clear any existing options
                var cardCreateCourseHtml = `
                            <div class="col-xl-3 col-lg-6 col-sm-6 my-3 item">
                                <div class="card1 card-child">
                                    <div class="card-body add-club">
                                        <button class="border-0" data-toggle="modal" data-target="#addCourse">
                                            <span>Add Course</span>
                                            <i class='bx bx-add-to-queue'></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        `;
                courseList.append(cardCreateCourseHtml);
                // Loop through the data array and append each class div
                $.each(data, function (index, courseObj) {

                    var statusText = '';
                    switch (courseObj.status) {
                        case 'Available':
                            statusText = `<span class="stt1" style="float: left;">Status: ${courseObj.status}</span>`
                            break;
                        case 'Draft':
                        case 'Postponed':
                            statusText = `<span class="stt3" style="float: left;">Status: ${courseObj.status}</span>`
                            break;
                        case 'EndofService':
                        case 'Cancelled':
                            statusText = `<span class="stt2" style="float: left;">Status: ${courseObj.status}</span>`
                            break;
                    }
                    // Construct card HTML
                    var cardHtml = `
                                <div class="col-xl-3 col-lg-6 col-sm-6 my-3">
                                    <div class="card1 card-child">
                                        <div class="club-name">
                                            Course ID: ${courseObj.courseId}
                                            <div class="status">
                                                    ${statusText}
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <div class="club-title">
                                                <ul>
                                                    <li><h6>Course name:</h6><span>${courseObj.courseName}</span></li>
                                                    <li><h6>Course type:</h6><span>${courseObj.courseType}</span></li>
                                                    <li><h6>Total hours:</h6><span>${courseObj.totalHours}</span></li>
                                                    <li><h6>Required age:</h6><span>${courseObj.requiredAge}</span></li>
                                                    <li><h6>Difficulty:</h6><span>${courseObj.difficulty}</span></li>
                                                    <li><h6>Description:</h6><span>${courseObj.description}</span></li>
                                                    <li><h6>Sessions amount:</h6><span>${courseObj.sessions.length} Session(s)</span></li>
                                                    <li><h6>Classes amount:</h6><span>${courseObj.classes.length} Class(es)</span></li>
                                                </ul>
                                            </div>
                                        </div>
                                        <div class="form-group mx-auto">
                                            <a class="btn btn-primary clickable-row" href="/Admin/Course/${courseObj.courseId}/Info" role="button">Details</a>
                                        </div>
                                    </div>
                                </div>
                            `;
                    // Append the constructed HTML to the class list container
                    courseList.append(cardHtml);
                });
            }
            $("#createCourseForm").submit(function (event) {
                event.preventDefault(); // Prevent the form from submitting

                // Gather form data
                var courseData = {
                    CourseName: $("#createCourse_CourseName").val(),
                    CourseType: $("#createCourse_CourseType").val(),
                    Category: $("#createCourse_Category").val(),
                    Description: $("#createCourse_Description").val(),
                    Difficulty: $("#createCourse_Difficulty").val(),
                    RequiredAge: $("#createCourse_RequiredAge").val(),
                    TotalHours: $("#createCourse_TotalHours").val(),
                };

                // Make the AJAX POST request
                $.ajax({
                    url: apiUrl + 'Course/Create',
                    headers: {
                        'Authorization': 'Bearer ' + token// Include the JWT token
                    },
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(courseData),
                    success: function (response) {
                        // Log the entire response to the console for debugging
                        // Check if the status is true
                        if (response.status) {
                            alert('Course created successfully!');
                            $('#createCourseForm').trigger("reset");
                            callApiGetCourseList();
                        } else {
                            console.error("API returned false status. Message:", response.ErrorMessage);
                        }
                    },
                    error: function (error) {
                        alert("Error in api call:" + error);
                        console.error("Error in api call", error);
                        //showAlert('success', 'Data fetched successfully.');
                    }
                });
            });
        </script>
    </body>
</html>
