@page "/Admin/Course/{courseId}/Session/{sessionId}/Homework/{homeworkId}/Info"
@model CEG_RazorWebApp.Pages.Admin.Course.HomeworkInfoModel
@{
    ViewData["Title"] = "Admin Homework Info Page";
    var homeworkInfo = Model.HomeworkInfo;
    var questionList = Model.Questions;
    var updateHomework = Model.UpdateHomeworkInfo;
    var addQuestion = Model.AddQuestion;
    Layout = Model.LayoutUrl;
    var acctoken = Model.AccToken;
    var apiUrl = Model.ApiUrl;
}
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
</head>
    <body>
        <div class="main-content">
            <div class="main">
                <div class="container-fluid">
                    <div class="row">
                        <div class="offset-sm-6 col-sm-6  d-flex justify-content-sm-end p-md-0 mt-2 mt-sm-0 ">
                            <ol class="breadcrumb">
                                <li class="breadcrumd-item">
                                    <a href="#">Manage</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Course/Index">Course</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Course/@Model.CourseId/Info">@Model.CourseId</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Course/@Model.CourseId/Info">Session</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Course/@Model.CourseId/Session/@Model.SessionId/Info">@Model.SessionId</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Course/@Model.CourseId/Session/@Model.SessionId/Info">Homework</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Course/@Model.CourseId/Session/@Model.SessionId/Homework/@Model.HomeworkId/Info">@Model.HomeworkId</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Course/@Model.CourseId/Session/@Model.SessionId/Homework/@Model.HomeworkId/Info">Info</a>
                                </li>
                            </ol>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 customer-booking">
                            <div class="row">
                                <div class="card profile col-12 mb-4">
                                    <div class="card-header" id="homework-title-status">
                                        <h4>Homework <label id="homework-homework-title" class="truncate"></label> Information</h4>
                                    </div>
                                <div id="alertContainer"></div>
                                    <div class="card-body">
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Homework ID:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="homework-id">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Status:</label>
                                            </div>
                                            <div class="col-sm-7" id="homework-status">
                                                @* @{
                                                    switch (homeworkInfo.Status)
                                                    {
                                                        case "Available":
                                                            {
                                                                <span class="outcome" style="float: left;">@homeworkInfo.Status</span>
                                                                break;
                                                            }
                                                        case "Draft":
                                                        case "Postponed":
                                                            {
                                                                <span class="approval" style="float: left;">@homeworkInfo.Status</span>
                                                                break;
                                                            }
                                                        case "EndofService":
                                                        case "Cancelled":
                                                            {
                                                                <span class="destroy" style="float: left;">@homeworkInfo.Status</span>
                                                                break;
                                                            }
                                                    }
                                                } *@
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Title:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="homework-title">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Description:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="homework-description">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Hours to do:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="homework-hours">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Type:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="homework-type">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Questions amount:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="homework-questions-amount">
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 customer-booking">
                            <div class="row">
                                <div class="card profile col-12 mb-4">
                                    @* <div class="card-header">
                                        <h4>Homework's Question List</h4>
                                        @{
                                            if (homeworkInfo.Status.Equals("Draft") || homeworkInfo.Status.Equals("Postponed"))
                                            {
                                                <div class="edit-info">
                                                    <i class='bx bxs-add-to-queue' data-toggle="modal" data-target="#addQuestion"></i>
                                                </div>
                                            }
                                        }
                                    </div>
                                    <div class="card-body">
                                        @{
                                            if (questionList != null && questionList.Count > 0)
                                            {
                                                @foreach (var questionInfo in questionList)
                                                {
                                                    @await Html.PartialAsync("PartialViews/_QuestionDetails", questionInfo)
                                                    ;
                                                }
                                            }
                                            else
                                            {
                                                <h5>Empty Question list</h5>
                                            }
                                        }
                                    </div> *@
                                    <div class="card-header">
                                        <h4>Homework's Questions List</h4>
                                        @* <div class="edit-info">
                                            <i class='bx bxs-add-to-queue bx-sm' data-toggle="modal" data-target="#addQuestion"></i>
                                        </div> *@
                                    </div>
                                    <div class="card-body" id="question_list">
                                        <h5>No questions found</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="editHomework" class="modal fade" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content modal-addRoom">
                    <div class="modal-header">
                        <h4 class="modal-title">Edit Homework</h4>
                    </div>
                    <div class="modal-body">
                        <form method="put" class="form-group" id="EditHomeworkForm">
                            <div class="modal-body">
                                <div class="col-12">
                                    <div class="form-group row">
                                        <label asp-for="@updateHomework.Title" class="col-sm-4 col-form-label"></label>
                                        <div class="col-sm-8">
                                            <input asp-for="@updateHomework.Title" type="text"
                                                   value="@updateHomework.Title" class="form-control" required>
                                            <span asp-validation-for="@updateHomework.Title" id="error_message"
                                                  class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label asp-for="@updateHomework.Description" class="col-sm-4 col-form-label"></label>
                                        <div class="col-sm-8">
                                            <textarea asp-for="@updateHomework.Description" value="@updateHomework.Description" required class="form-control col-md-7"></textarea>
                                            <span asp-validation-for="@updateHomework.Description" id="error_message"
                                                  class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label asp-for="@updateHomework.Hours" class="col-sm-4 col-form-label"></label>
                                        <div class="col-sm-8">
                                            <input asp-for="@updateHomework.Hours" value="@updateHomework.Hours" type="number" min="1" class="form-control" required>
                                            <span asp-validation-for="@updateHomework.Hours" id="error_message"
                                                  class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <label asp-for="@updateHomework.Type" class="col-sm-4 col-form-label"></label>
                                        <div class="col-sm-8">
                                            <select class="form-control custom-select" asp-for="@updateHomework.Type" asp-items="@updateHomework.DefaultHomeworkTypeSelectList"></select>
                                            <span asp-validation-for="@updateHomework.Type" id="error_message"
                                                  class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer justify-content-center">
                                <button class="btn btn-success" type="submit" value="Update">Save</button>
                                <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div id="addQuestion" class="modal fade" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content modal-addRoom">
                    <div class="modal-header">
                        <h4 class="modal-title">Add Question</h4>
                    </div>
                    <div class="modal-body">
                        <form method="post" id="AddQuestionForm">
                            <div class="row p-4">
                                <div class="col-12">
                                    <div class="row form-group">
                                        <label asp-for="@addQuestion.Question" class="col-md-3 col-form-label text-md-right"></label>
                                        <textarea asp-for="@addQuestion.Question" value="@addQuestion.Question" required class="form-control col-md-7"></textarea>
                                        <span asp-validation-for="@addQuestion.Question" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                    </div>
                                </div>
                                <div class="modal-footer justify-content-center" style="margin-left:400px;">
                                    <button class="btn btn-success" type="submit" name="action" value="addQuestion">Create</button>
                                    <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <script>
            var token = '@acctoken';
            var apiUrl = '@apiUrl';
            var questionList = [];
            $(document).ready(function () {
                callApiGetHomeworkDetail();
                $('#EditHomeworkForm').submit(function (event) {
                    event.preventDefault(); // Prevent the form from submitting normally

                    //Get the form data
                    var formData = {
                        question: $('textarea[id="updateQuestion_Question"]').val()
                    };

                    //Make the AJAX request
                    callApiPutUpdateHomework(formData);
                $('#EditHomeworkForm').trigger("reset");
                });
                $('#AddQuestionForm').submit(function (event) {
                    event.preventDefault(); // Prevent the form from submitting normally

                    // Get the form data
                    var formData = {
                        answer: $('textarea[id="createAnswer_Answer"]').val(),
                        type: $('select[id="createAnswer_Type"]').val(),
                        questionid: $('input[id="createAnswer_QuestionId"]').val()
                    };

                    // Make the AJAX request
                    callApiPostCreateAnswer(formData);
                $('#AddQuestionForm').trigger("reset");
                });
                $(document).on('submit', 'form[id^="editAnswerForm_"]', function (event) {
                    event.preventDefault();
                    // Extract the answerId from the form's id
                    let answerId = $(this).attr('id').split('_')[1];

                    // Collect form data
                    let formData = {
                        answer: $('#updateAnswer_' + answerId + '_Answer').val(),
                        type: $('#updateAnswer_' + answerId + '_Type').val()
                    };

                    // Call the API to update the answer
                    callApiPutUpdateAnswer(formData, answerId);

                    // Optionally reset the form
                    //$(this).trigger("reset");
                });
            });
            // Function to display alerts
            function showAlert(type, message) {
                var alertHtml = '';

                if (type === 'success') {
                    alertHtml = `
                        <div class="alert alert-success alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>
                    `;
                } else if (type === 'error') {
                    alertHtml = `
                        <div class="alert alert-danger alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>
                    `;
                }

                // Inject the alert HTML into the alert container
                $('#alertContainer').html(alertHtml);
            }
            function callApiPutUpdateHomework(formData) {
                $.ajax({
                    url: apiUrl + 'Homework/@Model.HomeworkId/Update', // Specify your Razor Page here
                    type: 'PUT',
                    data: JSON.stringify(formData),
                    headers: {
                        'Authorization': 'Bearer ' + token, // Token for authentication
                    },
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        // Handle success (display a success message or redirect, etc.)
                        if (response.status) {
                            showAlert('success', "Homework update successfully");
                            callApiGetHomeworkDetail();
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error (display the validation message, etc.)
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                    }
                });
            }
            function callApiPutUpdateAnswer(formData, answerId) {
                $.ajax({
                    url: apiUrl + 'Answer/' + answerId + '/Update', // Specify your Razor Page here
                    type: 'PUT',
                    data: JSON.stringify(formData),
                    headers: {
                        'Authorization': 'Bearer ' + token, // Token for authentication
                    },
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        // Handle success (display a success message or redirect, etc.)
                        if (response.status) {
                            showAlert('success', "Answer update successfully");
                            $('.modal-backdrop').remove();
                            // Remove specific class from body
                            $('body').removeClass('modal-open');

                            // Remove all inline styles from body
                            $('body').removeAttr('style');
                            callApiGetHomeworkDetail();
                            showAlert('', '');
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error (display the validation message, etc.)
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                    }
                });
            }
            function callApiPostCreateAnswer(formData) {
                $.ajax({
                    url: apiUrl + 'Answer/Create', // Specify your Razor Page here
                    type: 'POST',
                    data: JSON.stringify(formData),
                    headers: {
                        'Authorization': 'Bearer ' + token, // Token for authentication
                    },
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        // Handle success (display a success message or redirect, etc.)
                        if (response.status) {
                            showAlert('success', "Answer create successfully");
                            callApiGetHomeworkDetail();
                            showAlert('', '');
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error (display the validation message, etc.)
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                    }
                });
            }
            function callApiGetHomeworkDetail() {
                $.ajax({
                    url: apiUrl + 'Homework/@Model.HomeworkId', // API endpoint
                    type: 'GET',
                    success: function (response) {
                        // Log the entire response to the console for debugging
                        // Check if the status is true
                        if (response.status) {
                            setHomeworkDisplay(response.data);
                            // Check if homeworkAnswers is empty
                            if (response.data.homeworkQuestions && response.data.homeworkQuestions.length > 0) {
                                // Clear any existing answers
                                $('#question_list').empty();

                                // Loop through each answer and generate the HTML
                                response.data.homeworkQuestions.forEach(function (question) {
                                    let questionHtml = generateQuestionHtml(question); // Assuming both questionInfo and updateAnswer are the same structure
                                    $('#question_list').append(questionHtml);
                                });
                            } else {
                                // If the answer list is empty
                                $('#question_list').html('<h5>No questions found</h5>');
                            }
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (error) {
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                        //showAlert('success', 'Data fetched successfully.');
                    }
                });
            }
            function generateQuestionHtml(questionInfo) {
                return `
                        <div class="card-header">
                            <h5>Question <label class="truncate">${questionInfo.question}</label> Details</h5>
                        </div>
                        <div class="card-body">
                            <div class="row mb-sm-2">
                                <div class="col-md-5 text-md-right">
                                    <label class="col-form-label">Question ID:</label>
                                </div>
                                <div class="col-md-7">
                                    <span>${questionInfo.homeworkQuestionId}</span>
                                </div>
                            </div>
                            <div class="row mb-sm-2">
                                <div class="col-sm-5 text-sm-right">
                                    <label for="meeting-name">Answer:</label>
                                </div>
                                <div class="col-sm-7 text-sm-left">
                                    <span>${questionInfo.question}</span>
                                </div>
                            </div>
                            <div class="row mb-sm-2">
                                <div class="col-sm-5 text-sm-right">
                                    <label for="meeting-name">Answers Amount:</label>
                                </div>
                                <div class="col-sm-7 text-sm-left">
                                    <span>${questionInfo.answersAmount} Answer(s)</span>
                                </div>
                            </div>
                            <div class="card-body d-flex justify-content-center">
                                <a class="btn btn-success" href="/Admin/Question/${questionInfo.homeworkQuestionId}/Info">More Info</a>
                            </div>
                        </div>
                        <hr class="container my-0">
                        <div id="editanswer_${questionInfo.homeworkQuestionId}" class="modal fade" role="dialog">
                            <div class="modal-dialog modal-dialog-centered modal-lg" role="content">
                                <div class="modal-content modal-addRoom">
                                    <div class="modal-header">
                                        <h4 class="modal-title truncate">Update Question ${questionInfo.question}</h4>
                                    </div>
                                    <form method="put" class="form-group" id="editQuestionForm_${questionInfo.homeworkQuestionId}">
                                        <div class="modal-body">
                                            <div class="col-12">
                                                <div class="form-group row">
                                                    <label for="editQuestionForm_${questionInfo.homeworkAnswerId}_Answer" class="col-sm-4 col-form-label">Answer</label>
                                                    <div class="col-sm-8">
                                                        <textarea id="editQuestionForm_${questionInfo.homeworkAnswerId}_Answer" name="Answer" required class="form-control">${questionInfo.answer}</textarea>
                                                        <span class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2" id="error_message"></span>
                                                    </div>
                                                </div>
                                                <div class="form-group row">
                                                    <label for="editQuestionForm_${questionInfo.homeworkAnswerId}_Type" class="col-sm-4 col-form-label">Answer Type</label>
                                                    <div class="col-sm-8">
                                                        <select id="editQuestionForm_${questionInfo.homeworkAnswerId}_Type" name="Type" class="form-control custom-select">
                                                            ${getTypeOptions(questionInfo.type)}
                                                        </select>
                                                        <span class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2" id="error_message"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer justify-content-center">
                                            <button class="btn btn-success" type="submit" value="Update">Save</button>
                                            <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        `;
            }
            function getTypeOptions(selectedStatus) {
                var options = ['Incorrect', 'Correct']; // Example statuses
                var html = '';

                options.forEach(function (status) {
                    html += `<option value="${status}" ${selectedStatus === status ? 'selected' : ''}>${status}</option>`;
                });

                return html;
            }

            function setHomeworkDisplay(data) {
                var titleStatusHtml = data.status === 'Draft' || data.status === 'Postponed' ? `
                    <div class="edit-info">
                        <i class='bx bxs-edit bx-sm' data-toggle="modal" data-target="#editHomework"></i>
                    </div>
                    ` : '';
                var statusText = '';
                switch(data.status){
                    case 'Available':
                        statusText =`<span class="outcome" style="float: left;">${data.status}</span>`
                        break;
                    case 'Draft':
                    case 'Postponed':
                        statusText = `<span class="approval" style="float: left;">${data.status}</span>`
                        break;
                    case 'EndofService':
                    case 'Cancelled':
                        statusText = `<span class="destroy" style="float: left;">${data.status}</span>`
                        break;
                }
                $('#homework-id').text(data.homeworkId);
                $('#homework-title-status').append(titleStatusHtml);
                $('#homework-homework-title').text(data.title);
                $('#homework-title').text(data.title);
                $('#homework-status').append(statusText);
                $('#homework-description').text(data.description);
                $('#homework-hours').text(data.hours);
                $('#homework-type').text(data.type);
                $('#homework-questions-amount').text(data.questionsAmount + ' Question(s)');
                //$('#updateQuestion_Question').text(data.question);
            }
        </script>
    </body>
</html>
