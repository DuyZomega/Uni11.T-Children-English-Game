@page "/Student/{studentId}/Info"
@model CEG_RazorWebApp.Pages.Student.StudentInfoModel
@{
    ViewData["Title"] = "Student Info Page";
    var studentInfo = Model.StudentInfo;
    Layout = Model.LayoutUrl;
    var studentId = Model.StudentId;
}
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
</head>
<body>
    <div class="main-content">
        <div class="main">
            <div class="container-fluid">
                <div class="row">
                    <div class="offset-sm-6 col-sm-6  d-flex justify-content-sm-end p-md-0 mt-2 mt-sm-0 ">
                        <ol class="breadcrumb">
                            <li class="breadcrumd-item">
                                <a href="#">Manage</a>
                            </li>
                            <li class="breadcrumd-item">
                                <span>/</span>
                            </li>
                            <li class="breadcrumd-item">
                                <a href="/Admin/Account/Index">Account</a>
                            </li>
                            <li class="breadcrumd-item">
                                <span>/</span>
                            </li>
                            <li class="breadcrumd-item">
                                <a href="/Admin/Account/@studentId/Info">@studentId</a>
                            </li>
                            <li class="breadcrumd-item">
                                <span>/</span>
                            </li>
                            <li class="breadcrumd-item">
                                <a href="/Admin/Account/@studentId/Info">Info</a>
                            </li>
                        </ol>
                    </div>
                </div>
                @* @if (TempData["Success"] != null)
                {
                <div class="alert alert-success alert-dismissible fade show" id="notif">
                <i class='bx bx-message-alt-x p-1'></i>
                <strong class="mr-1">@TempData["Success"]</strong>
                <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                <span><i class='bx bx-x'></i></span>
                </button>
                </div>
                TempData.Remove("Success");
                }
                else if (TempData["Error"] != null)
                {
                <div class="alert alert-danger alert-dismissible fade show" id="notif">
                <i class='bx bx-message-alt-x p-1'></i>
                <strong class="mr-1">@TempData["Error"]</strong>
                <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                <span><i class='bx bx-x'></i></span>
                </button>
                </div>
                TempData.Remove("Success");
                } *@
                <div class="row">
                    <div class="col-12 customer-booking">
                        <div class="row">
                            <div class="card profile col-12 mb-4">
                                <div class="card-header">
                                    <h4>Account Information</h4>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-sm-2">
                                        <div class="col-md-5 text-md-right">
                                            <label class="col-form-label">Student ID:</label>
                                        </div>
                                        <div class="col-md-7">
                                            <span id="student-id">
                                            </span>
                                        </div>
                                    </div>
                                    <div class="row mb-sm-2">
                                        <div class="col-md-5 text-md-right">
                                            <label class="col-form-label">Username:</label>
                                        </div>
                                        <div class="col-md-7">
                                            <span id="account-username">
                                            </span>
                                        </div>
                                    </div>
                                    <div class="row mb-sm-2">
                                        <div class="col-md-5 text-md-right">
                                            <label class="col-form-label">Full Name:</label>
                                        </div>
                                        <div class="col-md-7">
                                            <span id="account-fullname">
                                            </span>
                                        </div>
                                    </div>
                                    <div class="row mb-sm-2">
                                        <div class="col-md-5 text-md-right">
                                            <label class="col-form-label">Gender:</label>
                                        </div>
                                        <div class="col-md-7">
                                            <span id="account-gender">
                                            </span>
                                        </div>
                                    </div>

                                    <div class="row mb-sm-2">
                                        <div class="col-md-5 text-md-right">
                                            <label class="col-form-label">Role:</label>
                                        </div>
                                        <div class="col-md-7">
                                            <span id="account-role">
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        var token = '@HttpContext.Session.GetString(CEG_RazorWebApp.Libraries.Constants.ACC_TOKEN)';
        var apiUrl = 'https://localhost:7143/api/';
        $(document).ready(function () {
            callApiGetAccountDetail();
            // Function to display alerts
            function showAlert(type, message) {
                var alertHtml = '';

                if (type === 'success') {
                    alertHtml = `
                                    <div class="alert alert-success alert-dismissible fade show" id="notif">
                                        <i class='bx bx-message-alt-x p-1'></i>
                                        <strong class="mr-1">` + message + `</strong>
                                        <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                            <span><i class='bx bx-x'></i></span>
                                        </button>
                                    </div>
                                `;
                } else if (type === 'error') {
                    alertHtml = `
                                    <div class="alert alert-danger alert-dismissible fade show" id="notif">
                                        <i class='bx bx-message-alt-x p-1'></i>
                                        <strong class="mr-1">` + message + `</strong>
                                        <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                            <span><i class='bx bx-x'></i></span>
                                        </button>
                                    </div>
                                `;
                }

                // Inject the alert HTML into the alert container
                $('#alertContainer').html(alertHtml);
            }
        });
        function callApiGetAccountDetail() {
            $.ajax({
                url: apiUrl + 'Account/@studentId', // API endpoint
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token// Include the JWT token
                },
                success: function (response) {
                    // Log the entire response to the console for debugging
                    console.log("Returned object:", response);

                    // Check if the status is true
                    if (response.status) {
                        accountDetail = response.data;

                        setAccountDisplay(accountDetail);
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call:", error);
                    //showAlert('success', 'Data fetched successfully.');
                }
            });
        }
        function setAccountDisplay(data) {
            $('#account-id').text(data.studentId);
            $('#account-username').text(data.username);
            $('#account-fullname').text(data.fullname);
            $('#account-gender').text(data.gender);
            $('#account-createddate').text(formatDate(data.createdDate)); // Format the date if needed
            $('#account-role').text(data.role.roleName);
            $('#account-status').text(data.status);
        }
        function getStatusOptions(selectedStatus) {
            var options = ['Inactive', 'Active', 'Expired', 'Denied', 'Suspended']; // Example statuses
            var html = '';

            options.forEach(function (status) {
                html += `<option value="${status}" ${selectedStatus === status ? 'selected' : ''}>${status}</option>`;
            });

            return html;
        }
        function formatDate(date) {
            let d = new Date(date);

            // Get day, month, year
            let day = String(d.getDate()).padStart(2, '0');
            let month = String(d.getMonth() + 1).padStart(2, '0'); // Months are zero-based
            let year = d.getFullYear();

            // Get hours, minutes
            let hours = String(d.getHours()).padStart(2, '0');
            let minutes = String(d.getMinutes()).padStart(2, '0');

            // Optionally, get seconds
            let seconds = String(d.getSeconds()).padStart(2, '0');

            // Return the formatted date and time as `dd/mm/yyyy hh:mm`
            return `${day}/${month}/${year} ${hours}:${minutes}`;

            // If you want to include seconds as well, use this return:
            // return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
        }
    </script>
</body>
</html>